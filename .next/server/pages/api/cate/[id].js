"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/cate/[id]";
exports.ids = ["pages/api/cate/[id]"];
exports.modules = {

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "(api)/./pages/api/cate/[id].js":
/*!********************************!*\
  !*** ./pages/api/cate/[id].js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db */ \"(api)/./pages/api/db.js\");\n\n// get a unique record, edit , delete \nconst categoryid = async (req, res)=>{\n    const { method , query: { id  }  } = req;\n    switch(method){\n        case \"GET\":\n            try {\n                const oneCategory = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"SELECT * FROM categories where cate_id = $1\", [\n                    id\n                ]);\n                if (!oneCategory) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json(oneCategory.rows);\n            } catch (error1) {\n                res.status(400).json({\n                    success: false,\n                    error: error1\n                });\n            }\n            break;\n        case \"PUT\":\n            try {\n                const { category  } = req.body;\n                const updateOne = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"UPDATE categories SET cate_name = $1 where cate_id = $2\", [\n                    category,\n                    id\n                ]);\n                if (!updateOne) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json({\n                    success: true,\n                    updateOne\n                });\n            } catch (error2) {\n                res.status(400).json({\n                    success: false,\n                    error: error2\n                });\n            }\n            break;\n        case \"DELETE\":\n            try {\n                console.log(id);\n                const deleteOne = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"DELETE FROM categories WHERE cate_id = $1\", [\n                    id\n                ]);\n                if (!deleteOne) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json({\n                    success: true,\n                    deleteOne\n                });\n            } catch (error3) {\n                res.status(400).json({\n                    success: false,\n                    error: error3\n                });\n            }\n            break;\n        // product API start here...\n        case \"GET\":\n            try {\n                const oneProduct = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"SELECT * FROM products where product_id = $1\", [\n                    id\n                ]);\n                if (!oneProduct) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json(oneProduct.rows);\n            } catch (error4) {\n                res.status(400).json({\n                    success: false,\n                    error: error4\n                });\n            }\n            break;\n        case \"PUT\":\n            try {\n                const { name , discription , price , stok , image  } = req.body;\n                const updateOne1 = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"UPDATE products SET product_name = $1,product_dis= $2, price=$3, stok=$4, product_img = $5 WHERE product_id = $6\", [\n                    name,\n                    discription,\n                    price,\n                    stok,\n                    image,\n                    id\n                ]);\n                if (!updateOne1) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json({\n                    success: true,\n                    updateOne: updateOne1\n                });\n            } catch (error5) {\n                res.status(400).json({\n                    success: false,\n                    error: error5\n                });\n            }\n            break;\n        case \"DELETE\":\n            try {\n                console.log(id);\n                const deleteOne1 = await _db__WEBPACK_IMPORTED_MODULE_0__.conn.query(\"DELETE FROM products WHERE cate_id = $1\", [\n                    id\n                ]);\n                if (!deleteOne1) {\n                    res.status(400).json({\n                        success: false,\n                        error\n                    });\n                }\n                res.status(200).json({\n                    success: true,\n                    deleteOne: deleteOne1\n                });\n            } catch (error6) {\n                res.status(400).json({\n                    success: false,\n                    error: error6\n                });\n            }\n            break;\n        default:\n            res.status(400).json({\n                success: false,\n                error\n            });\n            break;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (categoryid);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/cate/[id].js\n");

/***/ }),

/***/ "(api)/./pages/api/db.js":
/*!*************************!*\
  !*** ./pages/api/db.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conn\": () => (/* binding */ conn)\n/* harmony export */ });\n// import { Pool } from \"pg\";\n// let conn;\n// if(!conn){\n//     conn = new Pool({\n//         user: 'postgres',\n//         password: 'Thebalochcoder',\n//         host: 'localhost',\n//         port: 5432,\n//         database: 'testphase'\n//     });\n// }\n// export { conn };\n//  CLOUDE CONNECTION \nvar pg = __webpack_require__(/*! pg */ \"pg\");\n//or native libpq bindings\n//var pg = require('pg').native\nvar conString = process.env.DATABASE_URL //Can be found in the Details page\n;\nvar conn = new pg.Client(conString);\nconn.connect(function(err) {\n    if (err) {\n        console.error(\"could not connect to postgres\", err);\n        return conn = null;\n    }\n    conn.query('SELECT NOW() AS \"theTime\"', function(err, result) {\n        if (err) {\n            return console.error(\"error running query\", err);\n        }\n        console.log(\"DATABASE CONNECTED\");\n    // >> output: 2018-08-23T14:02:57.117Z\n    });\n});\n // CONNECTION POLLING METHOD\n // const { Pool } = require(\"pg\")\n // const pool = new Pool()\n // async function conn() {\n //   const client = await pool.connect()\n //   try {\n //     const res = await client.query(\"SELECT * FROM users WHERE id = $1\", [1])\n //     console.log(res.rows[0])\n //   } finally {\n //     await client.release()\n //     await client.end()\n //   }\n // }\n // export {conn}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZGIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDZCQUE2QjtBQUU3QixZQUFZO0FBQ1osYUFBYTtBQUNiLHdCQUF3QjtBQUN4Qiw0QkFBNEI7QUFDNUIsc0NBQXNDO0FBQ3RDLDZCQUE2QjtBQUM3QixzQkFBc0I7QUFDdEIsZ0NBQWdDO0FBQ2hDLFVBQVU7QUFFVixJQUFJO0FBRUosbUJBQW1CO0FBR25CLHNCQUFzQjtBQUN0QixJQUFJQSxFQUFFLEdBQUdDLG1CQUFPLENBQUMsY0FBSSxDQUFDO0FBQ3RCLDBCQUEwQjtBQUMxQiwrQkFBK0I7QUFFL0IsSUFBSUMsU0FBUyxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsWUFBWSxDQUFDLGtDQUFrQztBQUFuQztBQUN4QyxJQUFJQyxJQUFJLEdBQUksSUFBSU4sRUFBRSxDQUFDTyxNQUFNLENBQUNMLFNBQVMsQ0FBQztBQUNuQ0ksSUFBSSxDQUFDRSxPQUFPLENBQUMsU0FBU0MsR0FBRyxFQUFFO0lBQzFCLElBQUdBLEdBQUcsRUFBRTtRQUNOQyxPQUFPLENBQUNDLEtBQUssQ0FBQywrQkFBK0IsRUFBRUYsR0FBRyxDQUFDLENBQUM7UUFDcEQsT0FBT0gsSUFBSSxHQUFHLElBQUksQ0FBQztLQUNwQjtJQUNDQSxJQUFJLENBQUNNLEtBQUssQ0FBQywyQkFBMkIsRUFBRSxTQUFTSCxHQUFHLEVBQUVJLE1BQU0sRUFBRTtRQUM5RCxJQUFHSixHQUFHLEVBQUU7WUFDTixPQUFPQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRUYsR0FBRyxDQUFDLENBQUM7U0FDbEQ7UUFDQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUMsb0JBQW9CLENBQUM7SUFPbkMsc0NBQXNDO0tBRXZDLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQztBQUdhLENBRWhCLDRCQUE0QjtDQUc1QixpQ0FBaUM7Q0FDakMsMEJBQTBCO0NBRTFCLDBCQUEwQjtDQUMxQix3Q0FBd0M7Q0FDeEMsVUFBVTtDQUNWLCtFQUErRTtDQUMvRSwrQkFBK0I7Q0FDL0IsZ0JBQWdCO0NBQ2hCLDZCQUE2QjtDQUM3Qix5QkFBeUI7Q0FDekIsTUFBTTtDQUNOLElBQUk7Q0FDSixnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0ZnJvbnQvLi9wYWdlcy9hcGkvZGIuanM/YjgxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBQb29sIH0gZnJvbSBcInBnXCI7XHJcblxyXG4vLyBsZXQgY29ubjtcclxuLy8gaWYoIWNvbm4pe1xyXG4vLyAgICAgY29ubiA9IG5ldyBQb29sKHtcclxuLy8gICAgICAgICB1c2VyOiAncG9zdGdyZXMnLFxyXG4vLyAgICAgICAgIHBhc3N3b3JkOiAnVGhlYmFsb2NoY29kZXInLFxyXG4vLyAgICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG4vLyAgICAgICAgIHBvcnQ6IDU0MzIsXHJcbi8vICAgICAgICAgZGF0YWJhc2U6ICd0ZXN0cGhhc2UnXHJcbi8vICAgICB9KTtcclxuIFxyXG4vLyB9XHJcbiAgXHJcbi8vIGV4cG9ydCB7IGNvbm4gfTtcclxuICAgXHJcblxyXG4vLyAgQ0xPVURFIENPTk5FQ1RJT04gXHJcbnZhciBwZyA9IHJlcXVpcmUoJ3BnJylcclxuLy9vciBuYXRpdmUgbGlicHEgYmluZGluZ3NcclxuLy92YXIgcGcgPSByZXF1aXJlKCdwZycpLm5hdGl2ZVxyXG5cclxudmFyIGNvblN0cmluZyA9IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCAvL0NhbiBiZSBmb3VuZCBpbiB0aGUgRGV0YWlscyBwYWdlXHJcbnZhciBjb25uICA9IG5ldyBwZy5DbGllbnQoY29uU3RyaW5nKTtcclxuIGNvbm4uY29ubmVjdChmdW5jdGlvbihlcnIpIHtcclxuICBpZihlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ2NvdWxkIG5vdCBjb25uZWN0IHRvIHBvc3RncmVzJywgZXJyKTtcclxuICAgIHJldHVybiBjb25uID0gbnVsbDtcclxuICB9XHJcbiAgICBjb25uLnF1ZXJ5KCdTRUxFQ1QgTk9XKCkgQVMgXCJ0aGVUaW1lXCInLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xyXG4gICAgaWYoZXJyKSB7XHJcbiAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKCdlcnJvciBydW5uaW5nIHF1ZXJ5JywgZXJyKTtcclxuICAgIH1cclxuICAgICAgY29uc29sZS5sb2coXCJEQVRBQkFTRSBDT05ORUNURURcIilcclxuICAgICAgICBcclxuICAgICBcclxuICAgICBcclxuICAgIFxyXG4gICAgIFxyXG4gICAgXHJcbiAgICAvLyA+PiBvdXRwdXQ6IDIwMTgtMDgtMjNUMTQ6MDI6NTcuMTE3WlxyXG4gXHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbmV4cG9ydCB7IGNvbm4gfTtcclxuXHJcbi8vIENPTk5FQ1RJT04gUE9MTElORyBNRVRIT0RcclxuXHJcblxyXG4vLyBjb25zdCB7IFBvb2wgfSA9IHJlcXVpcmUoXCJwZ1wiKVxyXG4vLyBjb25zdCBwb29sID0gbmV3IFBvb2woKVxyXG5cclxuLy8gYXN5bmMgZnVuY3Rpb24gY29ubigpIHtcclxuLy8gICBjb25zdCBjbGllbnQgPSBhd2FpdCBwb29sLmNvbm5lY3QoKVxyXG4vLyAgIHRyeSB7XHJcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucXVlcnkoXCJTRUxFQ1QgKiBGUk9NIHVzZXJzIFdIRVJFIGlkID0gJDFcIiwgWzFdKVxyXG4vLyAgICAgY29uc29sZS5sb2cocmVzLnJvd3NbMF0pXHJcbi8vICAgfSBmaW5hbGx5IHtcclxuLy8gICAgIGF3YWl0IGNsaWVudC5yZWxlYXNlKClcclxuLy8gICAgIGF3YWl0IGNsaWVudC5lbmQoKVxyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyBleHBvcnQge2Nvbm59Il0sIm5hbWVzIjpbInBnIiwicmVxdWlyZSIsImNvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJjb25uIiwiQ2xpZW50IiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInF1ZXJ5IiwicmVzdWx0IiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/db.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/cate/[id].js"));
module.exports = __webpack_exports__;

})();